{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","React","App2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEAA,OAAOC,MAAQA,IA0MAC,MAHf,WACI,OAAO,2CC9LIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/___day___40/js/main.4ee7830c.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\nwindow.React = React\n//\n//\n// // const useStyles = makeStyles({\n// //     root: {\n// //         background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n// //         border: 0,\n// //         borderRadius: 3,\n// //         boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n// //         color: 'white',\n// //         height: 48,\n// //         padding: '0 30px',\n// //     },\n// // });\n//\n// // export default function Hook() {\n// //     const classes = useStyles();\n// //     return <Button className={classes.root}>Hook</Button>;\n// // }\n//\n// // const Home = () => {\n// //     return (\n// //         <div>\n// //             <p>Home</p>\n// //         </div>\n// //     );\n// // };\n// //\n// // const About = () => {\n// //     return (\n// //         <div>\n// //             <p>About</p>\n// //             <Link to={\"../\"}>back</Link>\n// //         </div>\n// //     );\n// // };\n// //\n// // const Contact = () => {\n// //     return (\n// //         <div>\n// //             <p>Contact</p>\n// //         </div>\n// //     );\n// // };\n// // class App3 extends Component {\n// //     render() {\n// //         return (\n// //             <Router basename={process.env.PUBLIC_URL}>\n// //                 <div>\n// //                     <h1>W3Adda - Simple SPA</h1>\n// //                     <nav>\n// //                         <ul>\n// //                             <li>\n// //                                 <Link to=\"/\">Home</Link>\n// //                             </li>\n// //                             <li>\n// //                                 <Link to=\"/about\">About</Link>\n// //                             </li>\n// //                             <li>\n// //                                 <Link to=\"/contact\">Users</Link>\n// //                             </li>\n// //                         </ul>\n// //                     </nav>\n// //\n// //                     <Route path=\"/\" exact component={Home} />\n// //                     <Route path=\"/about\" component={About} />\n// //                     <Route path=\"/contact\" component={Contact} />\n// //                 </div>\n// //             </Router>\n// //         );\n// //     }\n// // }\n//\n// const Endorsement = () =>{\n//     return <div>\n//         <p>从试点驿站的手机号关联的包裹数量能够看得出来整体用户黏度非常大，这将会是我们的一个巨大的流量入口。</p>\n//         <p>各个app导流成本不一，我们借用近期较火的社区团购应用来说，一般获客成本至少是十几块甚至以上。</p>\n//         <p>而我们推荐安装时有了驿站做背书，顾客就会很少有人拒绝安装了。顾客安装后发现对自己有价值，自然也就继续使用了。所以我们的导流成本极低，并且安装了薅完羊毛就卸载的也极少。</p>\n//         <p>总结：跟普通app获客进行比较的话，我们的获客成本几乎可以忽略不记，并且客源更大。</p>\n//         <Link to={\"../\"}>返回</Link>\n//     </div>\n// }\n// function App (){\n//     // render() {\n//     //     const style1 = makeStyles({\n//     //         root:{textAlign:\"left\"},\n//     //         red:{color:\"#FF0000\"}\n//     //     })();\n//     console.log(\"prefix is\", pathPrefix);\n//         return (<div className={\"App\"}>\n//             <Container maxWidth={\"md\"} style={{textAlign:\"left\"}} fixed>\n//\n//                 <Router basename={pathPrefix + \"/\"}>\n//                     <Route path=\"/\" exact component={Main} />\n//                     <Route path=\"/endorsement\" exact component={Endorsement} />\n//                 </Router>\n//             </Container>\n//         </div>)\n//     // }\n// }\n// function Main() {\n//     const style1 = makeStyles({\n//         root:{textAlign:\"left\"},\n//         red:{color:\"#FF0000\"}\n//     })();\n//   return (\n//     <div >\n//         {/*<Container maxWidth={\"md\"} className={style1.root} fixed>*/}\n//             <h4>产品介绍</h4>\n//             <p>下面将快递驿站简称 驿站</p>\n//             <p>到快递驿站取件的人简称 顾客</p>\n//             <p>我们的产品目的是<span className={style1.red}>借道</span>驿站，\n//                 利用它相对于顾客来说天生就带的信用背书，降低我们的金钱和时间成本，\n//                 向顾客推荐安装我们的查看/领取自己快递包裹的app，培育出一个能够<span className={style1.red}>生产</span> 流量的入口。\n//                 <Link to={\"/endorsement\"} >更多</Link>\n//             </p>\n//             <h4>为什么要给驿站开发出入库系统</h4>\n//             <p>有了出入库系统才能获取到顾客包裹的信息，以供顾客查阅自己的未取/已取包裹信息。\n//                 <a href={\"x.hmtl\"}>更多</a>\n//             </p>\n//\n//             <h4 className={style1.red}>顾客端应用有什么用</h4>\n//             <p>顾客打开应用能够看到自己是否有新包裹到了，之前取过哪些包裹，也可添加追踪，随时掌握在途包裹的位置。在一个地方统一查看包裹，比切换多个电商app查看自己的包裹方便了很多。\n//                 根据当前试点驿站数据分析，大多数顾客每个月在10个包裹以上，这种订购频次导致查看的需求还是比较高的，尤其是老年人、没时间的人、购物比较多的人。</p>\n//             <p>顾客可以在包裹到达快递驿站后看到自己包裹的照片，这样可以在自取时加快顾客找件的速度，下班高峰期能够给快递驿站减轻很大的压力。</p>\n//             {/*<p>顾客一般会在固定几个社区取件，例如一两个生活区、或者还会再有一两个工作区。</p>*/}\n//             <p>根据顾客经常取件的驿站，我们就能知道这位顾客经常生活工作的区域，这样我们就可以搞近场类型的社交和团购了。</p>\n//\n//             <h4 className={style1.red}>驿站为什么要用我们的系统</h4>\n//             <p>我们的系统基本集合了现有市场上 驿站助手、快宝驿站、菜鸟驿站的主要功能（驿站给快递员出入库和隐号面单读取还没做，这个在有点资金和人员后，到对应快递公司去对接就行）。</p>\n//             <p>以及我们在深入驿站进行研发时发现和解决了一些需要实操才能发现的问题，例如</p>\n//             <ul style={{marginLeft: 0, paddingLeft: 10}}>\n//                 <li>店内有电脑的可以建立一套服务系统，用于出入库监控拍照和辅助查询包裹出入库情况。店内建立系统的目的是为了防止断网，以及有网速快的优点。</li>\n//                 <li>入库拍照：在实际使用中难以避免某些包裹因为错放或者是拿乱导致一时半会儿找不到，有了入库照片，就可以更容易找到包裹。</li>\n//                 <li>出库拍照：出库时可以手机对包裹进行拍照，同时也可以控制店内监控拍照。这在顾客忘记自己的包裹是否已取，或者是家人间互相帮忙取件而出现包裹是否已经被拿走时，看出库照片就可以知道是谁拿走的了。</li>\n//                 <li>无交流取件：顾客有两种取件方式</li>\n//                 <ul style={{marginLeft: 0, paddingLeft: 10}}>\n//                     <li>店员取件：顾客到店后打开小程序或者app，点击取件，店内电脑显示取件人可取的包裹的图片、单号、手机号、货架信息等，店员给取出。</li>\n//                     <li>顾客自取：顾客到店后让店内的手机扫描自己app的二维码来证明身份（可选），顾客根据小程序或app里标记包裹的位置，到货架中拿到自己的包裹，\n//                         再使用店内手机扫描条码出库（可选，目的是为了防止拿错包裹，捎带也能提醒顾客少拿或者错拿了哪个包裹）。</li>\n//                 </ul>\n//                 <li>离线出库：网络很难避免断网，所以我们设计了本地和或店内电脑先进行出库，等网络恢复后再同步到远程数据库。</li>\n//                 <li>多包裹出库：一个人可能有多个包裹，每个包裹都扫描出库会比较耗时，所以我们设计了一键出库功能。</li>\n//             </ul>\n//             <h4 className={style1.red}>驿站的额外动力</h4>\n//             <p>例如取件顾客端：</p>\n//             <p>顾客取件，打开app，显示驿站名称，下面是驿站的店长推荐轮播图</p>\n//             <p>这些推广的收入可以都归于驿站，社区化的广告价格应该不低于两毛一次（且轮播图可有多个推荐），\n//                 假设一个驿站一天有八百个件，如果一天有四百个取件人打开app，那么就是八十块钱的收入。\n//                 这种店长推荐可能价值更大化的是社区属性，例如一车西瓜覆盖五个社区，可能几十个社区会产生一个或多个专门负责这种广告接入的团长。\n//                 或者是一些地推扫楼等推广，一天的人力成本好几百，而改用我们的app或者店内背书做推广，可以效果好很多，并且花费也会低很多。\n//                 如果驿站自己当前没有广告接入，我们可以每个打开给五分钱做补偿。</p>\n//             <p>顾客端的驿站下方有“找券”和“比价”的<span className={style1.red}>返利</span>入口，把淘宝联盟、拼多多团长、京东联盟等接入，每单大约会有几毛到几块（少数特殊大件可能有几十上百）的收入，\n//                 每天社区内有五十人使用了这个功能，每单按一元收入记，又会再有五十元的收入。这部分收入也全部归属驿站</p>\n//             <p>综上，驿站一天八百个件的话，保守收入预期是每天一百三十，一个月是三千九百，最次也应该能达到两千，搞得好点的话可以达到六千，\n//                 已经是一个完整劳动力的收入了。</p>\n//             <p>顾客端设立“好价”专栏，这部分可以学习《什么值得买》里的好价、白菜、推荐等栏目。\n//                 这部分的推荐收入可以跟顾客所在活动区域的快递驿站进行分享。这部分收入暂时没有预估的数据依据。</p>\n//             <p>其它一些业务类似：给驿站对接干洗店，驿站收发衣服，快递员负责顺路给洗衣店送去并负责取回。</p>\n//             <p>京东一些满减优惠需要一次购买的量略大，可以放在驿站进行多人拆单，每人给驿站支付一点费用就行，甚至可以有保鲜设备来保存生鲜。</p>\n//             <p>诸如以上几个方案（不排除以后会增删），每个月给每个驿站增加三千至一万甚至更高收入的可能性还是挺有希望的，并且快递驿站的付出只是维护使用我们的app就行。</p>\n//             <p>这方面可做的事情非常多，以后会比较着力继续深入探索。</p>\n//\n//             <h4 className={style1.red}>为什么着重说驿站</h4>\n//             <p className={style1.red}>因为我们的项目目标是顾客端，\n//                 但是我们依赖的是快递驿站的推荐、维护，当我们给快递驿站链接了更多额外利益之后，\n//                 快递驿站会积极帮我们维护顾客端的活跃度，由此我们能够达到创造一个活跃度极高的系统，且推广和维护成本极低的目的。</p>\n//             <p className={style1.red}>\n//                 用中共的话说，驿站就是我们的村级党委书记，一线战士，给了他们足够的利益，他们就会跟着我们管理羊群。</p>\n//\n//             <h4>快递方面大环境</h4>\n//             <p>快递驿站是一个降低快递成本的环节，所以多个快递公司也在积极推进快递驿站的使用。</p>\n//             <p>今年疫情导致更多快递不能进社区，变相促进了快递驿站的发展。</p>\n//             <p>今后一段时间会是快递驿站点的快速增长期，我们可以借力这个时间节点快速打开一部分市场。</p>\n//\n//             <div href={\"#\"} name={\"competitor\"}><h4>大家可能认为这款产品的竞争者</h4></div>\n//             <p>我们的产品是一款顾客端的应用，所以现有市场上的驿站类产品本质上跟我们并不是竞争关系，我们只是借驿站的道来走一下。</p>\n//             <p>在一个社区里如果有一个以上的驿站，我们只需要占领一个就行（在当前驿站的扩张期，机会也是比较多的），\n//                 我们的目标只是要这些顾客，而非要铺满这个社区的所有站点。</p>\n//             <p>菜鸟驿站入驻需要一定门槛，并且它公司承担了跟快递公司对接的事务，而实际操作中这些业务的决定权或许在快递员或许在底层快递网点手里，\n//                 所以菜鸟驿站在这方面推进的也是比较吃力，而我们没有这个需求，所以也没有这个压力。</p>\n//             <p>快宝驿站、驿站助手一直是一个快递员助手的工具类应用，主要是依靠短信来赚钱</p>\n//             <p>而我们只是利用驿站的信用（获客成本极低）和地理位置（近场）的便利性来加速推广和降低我们的成本，所以不需要跟他们在产品层面有什么拼杀。</p>\n//             <p>并且未来我们不排除会探索跟一些驿站类的服务商进行合作以加快进度。</p>\n//             <p>当前这款产品在市场上还没有看到类似套路的竞品。</p>\n//\n//             <div href={\"#\"} name={\"about_product\"}> <h4>产品定位和盈利以及展望</h4></div>\n//             <p>这个产品不是做快递驿站的。</p>\n//             <p>我们目前做的是以社区为单位的这些顾客成为我们的应用的用户。</p>\n//             <p>我们这个产品的初期是顾客基于自己的刚需（取件）而被动使用的产品。</p>\n//             <p>由此已经能够产生大量的流量，所以我们的产品是一个拥有大流量的<span className={style1.red}>平台</span>。</p>\n//             <p>盈利方面会借用市场已有且已成熟的电商、社交、游戏等公司的产品进行出售流量，合作变现。</p>\n//             <p>另外，因为这款产品具有天然的社区化属性，为了对产品的深化挖掘，未来我们还将会向近场社交方向进行拓展，目前已有初步方案待摸索实施。</p>\n//         {/*</Container>*/}\n//         <h4 style={{textAlign:\"center\"}}>END</h4>\n//     </div>\n//   );\n// }\n\nfunction App2(){\n    return <div>hhahra222</div>\n}\nexport default App2;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}